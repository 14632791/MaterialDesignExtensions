<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:wpfLib="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:convertersLib="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
                    xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls"
                    xmlns:converters="clr-namespace:MaterialDesignExtensions.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Shadows.xaml" />
        <ResourceDictionary>
            <convertersLib:BrushRoundConverter x:Key="brushRoundConverter"/>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    <converters:EmptyEnumerableToBoolConverter x:Key="emptyEnumerableToFalseConverter" EmptyValue="False" />
    
    <Style TargetType="{x:Type controls:TextBoxSuggestions}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TextBoxSuggestions}">
                    <Grid Background="Transparent">
                        <Border x:Name="rootBorder">
                            <ContentControl x:Name="textBoxContentControl" Content="{TemplateBinding TextBox}" HorizontalAlignment="Stretch" VerticalAlignment="Top" />
                        </Border>
                        <Popup x:Name="suggestionItemsPopup"
                               PlacementTarget="{Binding ElementName=rootBorder}"
                               Placement="Bottom"
                               PopupAnimation="Fade" AllowsTransparency="True" Focusable="False"
                               SnapsToDevicePixels="True"
                               MaxHeight="300" Width="{Binding Path=ActualWidth, ElementName=rootBorder}">
                            <Popup.Style>
                                <Style TargetType="{x:Type Popup}">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding Path=ItemsSource, ElementName=suggestionItemsControl, Converter={StaticResource emptyEnumerableToFalseConverter}}" Value="True" />
                                                <Condition Binding="{Binding Path=Content.IsFocused, Mode=OneWay, ElementName=textBoxContentControl}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsOpen" Value="True" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Popup.Style>
                            <Border Background="Transparent" HorizontalAlignment="Stretch" Padding="0,4,0,0">
                                <!-- Effect="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(wpfLib:ShadowAssist.ShadowDepth), Converter={x:Static convertersLib:ShadowConverter.Instance}}" -->
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1" CornerRadius="2" SnapsToDevicePixels="True"
                                        HorizontalAlignment="Stretch">
                                    <ItemsControl x:Name="suggestionItemsControl" IsEnabled="{TemplateBinding IsEnabled}"
                                                  Margin="0,4,0,4"
                                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                  ScrollViewer.CanContentScroll="True"
                                                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                        <ItemsControl.Template>
                                            <ControlTemplate TargetType="{x:Type ItemsControl}">
                                                <Border SnapsToDevicePixels="True">
                                                    <ScrollViewer Focusable="False">
                                                        <ItemsPresenter SnapsToDevicePixels="True" />
                                                    </ScrollViewer>
                                                </Border>
                                            </ControlTemplate>
                                        </ItemsControl.Template>
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel IsItemsHost="True" Orientation="Vertical" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Background="Transparent" HorizontalAlignment="Stretch" MinHeight="56">
                                                    <Border Background="{Binding Path=Foreground, Converter={StaticResource brushRoundConverter}, ElementName=itemButton}"
                                                            HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="True">
                                                                        <Setter Property="Opacity" Value="0.1" />
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}" Value="False">
                                                                        <Setter Property="Opacity" Value="0" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                    </Border>
                                                    <Button x:Name="itemButton" Padding="16,8,16,8"
                                                            Command="{x:Static controls:TextBoxSuggestions.SelectSuggestionItemCommand}" CommandParameter="{Binding}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Background" Value="Transparent" />
                                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="Padding" Value="8" />
                                                                <Setter Property="wpfLib:RippleAssist.Feedback" Value="{DynamicResource MaterialDesignFlatButtonRipple}" />
                                                                <Setter Property="wpfLib:RippleAssist.ClipToBounds" Value="True" />
                                                                <Setter Property="HorizontalAlignment" Value="Stretch" />
                                                                <Setter Property="VerticalAlignment" Value="Stretch" />
                                                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                                                <Setter Property="VerticalContentAlignment" Value="Stretch" />
                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="Button">
                                                                            <wpfLib:Ripple Content="{TemplateBinding Content}"
                                                                                           Focusable="False"
                                                                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                           Padding="{TemplateBinding Padding}"
                                                                                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                        <TextBlock Text="{Binding}" TextTrimming="CharacterEllipsis"
                                                                   HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                                                    </Button>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>